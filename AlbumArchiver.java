/**
 * @brief Main application class
 * @author Yannis Exidaridis <jexi@noc.uoa.gr>
 */

package albums;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
       
public class AlbumArchiver extends javax.swing.JFrame {
    
    private final String VERSION = "1.3";
    /**
     * Creates new form main
     */
    public AlbumArchiver () {
        initComponents();
        Config config = new Config();
        if (!config.ReadConfig()) {
            Object[] options = { "Install", "Cancel" };
            int choice = JOptionPane.showOptionDialog(null, "Config file not found! Click Install to create Database.", 
                                                "Warning", JOptionPane.YES_NO_OPTION,
                                                JOptionPane.WARNING_MESSAGE,
                                                null,
                                                options, 
                                                options[0]);
            if (choice == JOptionPane.YES_OPTION) {
                new Install().setVisible(true); // install
            } else {
                System.exit(0); // exit
            }            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelBackgroundImage = new javax.swing.JLabel();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenuActions = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemSearch = new javax.swing.JMenuItem();
        jMenuItemEditArtist = new javax.swing.JMenuItem();
        jSeparatorActions = new javax.swing.JPopupMenu.Separator();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuReportToPDF = new javax.swing.JMenu();
        jMenuItemExportPdf = new javax.swing.JMenuItem();
        jMenuItemExportSQL = new javax.swing.JMenuItem();
        jMenuItemExportHTML = new javax.swing.JMenuItem();
        jMenuItemExportEpub = new javax.swing.JMenuItem();
        jMenuInfo = new javax.swing.JMenu();
        jMenuItemStat = new javax.swing.JMenuItem();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Music Archiver");
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(300, 200));
        setResizable(false);

        jLabelBackgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/albums/cover.jpg"))); // NOI18N

        jMenuActions.setText("Actions");

        jMenuItemNew.setText("Insert");
        jMenuItemNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewActionPerformed(evt);
            }
        });
        jMenuActions.add(jMenuItemNew);

        jMenuItemSearch.setText("Search");
        jMenuItemSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSearchActionPerformed(evt);
            }
        });
        jMenuActions.add(jMenuItemSearch);

        jMenuItemEditArtist.setText("Artist Edit ");
        jMenuItemEditArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditArtistActionPerformed(evt);
            }
        });
        jMenuActions.add(jMenuItemEditArtist);
        jMenuActions.add(jSeparatorActions);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuActions.add(jMenuItemExit);

        jMenuBarMain.add(jMenuActions);

        jMenuReportToPDF.setText("Export to..");

        jMenuItemExportPdf.setText("pdf format");
        jMenuItemExportPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportPdfActionPerformed(evt);
            }
        });
        jMenuReportToPDF.add(jMenuItemExportPdf);

        jMenuItemExportSQL.setText("sql format");
        jMenuItemExportSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportSQLActionPerformed(evt);
            }
        });
        jMenuReportToPDF.add(jMenuItemExportSQL);

        jMenuItemExportHTML.setText("html format");
        jMenuItemExportHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportHTMLActionPerformed(evt);
            }
        });
        jMenuReportToPDF.add(jMenuItemExportHTML);

        jMenuItemExportEpub.setText("epub format");
        jMenuItemExportEpub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportEpubActionPerformed(evt);
            }
        });
        jMenuReportToPDF.add(jMenuItemExportEpub);

        jMenuBarMain.add(jMenuReportToPDF);

        jMenuInfo.setText("Info");
        jMenuInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuInfoActionPerformed(evt);
            }
        });

        jMenuItemStat.setText("Statistics");
        jMenuItemStat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemStatActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemStat);

        jMenuItemAbout.setText("About");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuInfo.add(jMenuItemAbout);

        jMenuBarMain.add(jMenuInfo);

        setJMenuBar(jMenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelBackgroundImage)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelBackgroundImage)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewActionPerformed
        new InsertForm().setVisible(true);
    }//GEN-LAST:event_jMenuItemNewActionPerformed

    private void jMenuItemSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSearchActionPerformed
        
        Database db = new Database();
        Integer numOfAlbums = 0;
        String SearchName = JOptionPane.showInputDialog(null, "Enter Artist name", "Search", JOptionPane.INFORMATION_MESSAGE);
        if (SearchName != null) {            
            try {
                numOfAlbums = db.NumberOfAlbums(SearchName);
            } catch (SQLException ex) {
                Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (numOfAlbums == 0) { // no results
                JOptionPane.showMessageDialog(null, "There are no albums", "Search", JOptionPane.WARNING_MESSAGE);
            } else { try {
                // display search results
                new DisplayArtistAlbumsForm(SearchName.trim(), numOfAlbums).setVisible(true);
                } catch (MalformedURLException ex) {
                    Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_jMenuItemSearchActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    /**
     * @brief export to pdf
     * @param evt 
     */
    private void jMenuItemExportPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportPdfActionPerformed
                
        Report pdfreport;        
        try {
            pdfreport = new Report();
            try {
                pdfreport.CreateReport(); // report
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "File could not be created!", "Error", JOptionPane.ERROR_MESSAGE);            
                Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
        }        
        JOptionPane.showMessageDialog(null, "Output created in file albums.pdf", "Success", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItemExportPdfActionPerformed

    private void jMenuItemEditArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditArtistActionPerformed
        
        Database db = new Database();
        Integer numOfArtists = 0;
        String SearchArtistName = JOptionPane.showInputDialog(null, "Enter Artist name", "Search", JOptionPane.INFORMATION_MESSAGE);
        if (SearchArtistName != null) {
            try {
                numOfArtists = db.NumberOfArtists(SearchArtistName);
            } catch (SQLException ex) {
                Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
            }
            if (numOfArtists == 0) { // no results
                JOptionPane.showMessageDialog(null, "There are no artists", "Search", JOptionPane.WARNING_MESSAGE);
            } else { // display search results                
                new DisplayArtistsForm(SearchArtistName.trim(), numOfArtists).setVisible(true);
            }
        }
    }//GEN-LAST:event_jMenuItemEditArtistActionPerformed

    /**
     * @brief export to sql
     * @param evt 
     */
    private void jMenuItemExportSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportSQLActionPerformed
        
        SqlExport export;
        export = new SqlExport();
        
        if (export.CreateSqlExport()) {
            JOptionPane.showMessageDialog(null, "Output created in file albums.sql", "Success", JOptionPane.INFORMATION_MESSAGE);                    
        } else {
            JOptionPane.showMessageDialog(null, "File could not be created!", "Error", JOptionPane.WARNING_MESSAGE);                                
        }
    }//GEN-LAST:event_jMenuItemExportSQLActionPerformed

    /**
     * brief export to html
     * @param evt 
     */
    private void jMenuItemExportHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportHTMLActionPerformed
        
        HtmlExport export;
        export = new HtmlExport();
        
        try {
            export.CreateExport();
            JOptionPane.showMessageDialog(null, "Output created in file albums.html", "Success", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemExportHTMLActionPerformed

    /**
     * @brief export to epub
     * @param evt 
     */
    private void jMenuItemExportEpubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportEpubActionPerformed
       
       EpubExport export;
       export = new EpubExport();
       
       if (export.CreateEpubExport()) {
            JOptionPane.showMessageDialog(null, "Output created in file albums.epub", "Success", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "File could not be created!", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemExportEpubActionPerformed

    private void jMenuInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuInfoActionPerformed
                
        
    }//GEN-LAST:event_jMenuInfoActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
                                 
        JOptionPane.showMessageDialog(null, "Version "+VERSION, "About", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemStatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemStatActionPerformed
        
        Database db = new Database();
        String AlbumSum = "You have";
        try {
            AlbumSum += System.lineSeparator()+db.getFormattedCountAlbum();
        } catch (SQLException ex) {
            Logger.getLogger(AlbumArchiver.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(null, AlbumSum, "Statistics", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jMenuItemStatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlbumArchiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlbumArchiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlbumArchiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlbumArchiver.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new AlbumArchiver().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelBackgroundImage;
    private javax.swing.JMenu jMenuActions;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JMenu jMenuInfo;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemEditArtist;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemExportEpub;
    private javax.swing.JMenuItem jMenuItemExportHTML;
    private javax.swing.JMenuItem jMenuItemExportPdf;
    private javax.swing.JMenuItem jMenuItemExportSQL;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemSearch;
    private javax.swing.JMenuItem jMenuItemStat;
    private javax.swing.JMenu jMenuReportToPDF;
    private javax.swing.JPopupMenu.Separator jSeparatorActions;
    // End of variables declaration//GEN-END:variables
}
